// Generated by CoffeeScript 1.7.1
var Tab, Tabs,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty;

Tabs = (function() {
  var tabs;

  tabs = {};

  function Tabs(id) {
    this.id = id;
    this.hideWelcome = __bind(this.hideWelcome, this);
    this.showWelcome = __bind(this.showWelcome, this);
    this.setWelcome = __bind(this.setWelcome, this);
    $("" + this.id).append("<ul></ul> <div class=\"ui-layout-content ui-widget-content\"></div></div>");
    $("" + this.id).tabs().find(".ui-tabs-nav").sortable({
      axis: 'x',
      zIndex: 2
    });
  }

  Tabs.prototype.addTab = function(tabid, title) {
    var newtab;
    if (tabs[tabid] !== void 0) {
      tabs[tabid].select();
      return tabs[tabid];
    }
    if (this.size() === 0) {
      this.hideWelcome();
    }
    newtab = new Tab(tabid, title, this);
    tabs[tabid] = newtab;
    newtab.select();
    return newtab;
  };

  Tabs.prototype.refresh = function() {
    console.log("Refreshing: " + this.id);
    return $("" + this.id).tabs("refresh");
  };

  Tabs.prototype.size = function() {
    var k;
    return ((function() {
      var _results;
      _results = [];
      for (k in tabs) {
        if (!__hasProp.call(tabs, k)) continue;
        _results.push(k);
      }
      return _results;
    })()).length;
  };

  Tabs.prototype.unlist = function(tabid) {
    delete tabs[tabid];
    if (this.size() === 0) {
      return this.showWelcome();
    }
  };

  Tabs.prototype.getTabIDs = function() {
    var key, result, value;
    result = [];
    for (key in tabs) {
      if (!__hasProp.call(tabs, key)) continue;
      value = tabs[key];
      result.push(key);
    }
    return result;
  };

  Tabs.prototype.setWelcome = function(welcome) {
    this.welcome = welcome;
    if (this.size() === 0) {
      this.hideWelcome();
      return this.showWelcome();
    }
  };

  Tabs.prototype.showWelcome = function() {
    if (this.welcome === void 0) {
      return;
    }
    return $(".ui-layout-content").append(this.welcome);
  };

  Tabs.prototype.hideWelcome = function() {
    if (this.welcome === void 0) {
      return;
    }
    return $(".ui-layout-content").empty();
  };

  return Tabs;

})();

Tab = (function() {
  function Tab(tabid, title, tabs) {
    var uuid;
    this.tabid = tabid;
    this.title = title;
    this.tabs = tabs;
    uuid = require('uuid');
    this.domid = uuid.v4();
    $("" + this.tabs.id + " > ul").append("<li class='li-" + this.domid + "'> <a href=\"#" + this.domid + "\">" + this.title + "</a> <span class='ui-icon ui-icon-circle-close ui-closable-tab close-" + this.domid + "'></li>");
    $("" + this.tabs.id + " .ui-layout-content").append("<div id =\"" + this.domid + "\"></div>");
    this.tabs.refresh();
    $(".close-" + this.domid).on("click", (function(_this) {
      return function() {
        return _this.remove();
      };
    })(this));
  }

  Tab.prototype.setContent = function(content) {
    $("#" + this.domid).html(content);
    return this.tabs.refresh();
  };

  Tab.prototype.select = function() {
    var index;
    index = $("" + this.tabs.id + " ul li").index($("li[aria-controls='" + this.domid + "']"));
    return $("" + this.tabs.id).tabs("option", "active", index);
  };

  Tab.prototype.remove = function() {
    console.log("Close: " + this.tabid);
    $(".li-" + this.domid).remove();
    $("#" + this.domid).remove();
    this.tabs.refresh();
    this.tabs.unlist(this.tabid);
  };

  return Tab;

})();

module.exports.Tabs = Tabs;

//# sourceMappingURL=ui.map
